"use strict";(self.webpackChunkmm_notes=self.webpackChunkmm_notes||[]).push([[290],{8991:(s,n,a)=>{a.r(n),a.d(n,{data:()=>l});const l=JSON.parse('{"key":"v-7c2a7202","path":"/source-code/clsx.html","title":"clsx","lang":"zh-CN","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"clsx 使用方式","slug":"clsx-使用方式","children":[]},{"level":2,"title":"clsx 源码笔记","slug":"clsx-源码笔记","children":[]}],"git":{"updatedTime":1676261424000},"filePathRelative":"source-code/clsx.md"}')},8524:(s,n,a)=>{a.r(n),a.d(n,{default:()=>d});var l=a(6252);const p=(0,l._)("h1",{id:"clsx",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#clsx","aria-hidden":"true"},"#"),(0,l.Uk)(" clsx")],-1),o={href:"https://github.com/lukeed/clsx",target:"_blank",rel:"noopener noreferrer"},e=(0,l.Uk)("clsx"),D=(0,l.Uk)(" 轻量级工具库，用于有条件的拼接类名"),c=(0,l._)("h5",{id:"相似库",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#相似库","aria-hidden":"true"},"#"),(0,l.Uk)(" 相似库")],-1),r={href:"https://github.com/JedWatson/classnames",target:"_blank",rel:"noopener noreferrer"},t=(0,l.Uk)("classnames"),i=(0,l.uE)('<h2 id="clsx-使用方式" tabindex="-1"><a class="header-anchor" href="#clsx-使用方式" aria-hidden="true">#</a> clsx 使用方式</h2><p><code>clsx</code> 函数可以接受任意数量的参数，每个参数可以是对象、数组、布尔值、字符串或数值，经过处理后会返回一个字符串</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">clsx</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;clsx&#39;</span></span>\n<span class="line"><span style="color:#6A9955;">// or</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">clsx</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;clsx&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A9955;">// Strings (variadic)</span></span>\n<span class="line"><span style="color:#DCDCAA;">clsx</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#CE9178;">&#39;bar&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;baz&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#6A9955;">//=&gt; &#39;foo bar baz&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A9955;">// Objects</span></span>\n<span class="line"><span style="color:#DCDCAA;">clsx</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">foo:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">bar:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">baz:</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">isTrue</span><span style="color:#D4D4D4;">() })</span></span>\n<span class="line"><span style="color:#6A9955;">//=&gt; &#39;foo baz&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A9955;">// Objects (variadic)</span></span>\n<span class="line"><span style="color:#DCDCAA;">clsx</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">foo:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;"> }, { </span><span style="color:#9CDCFE;">bar:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;"> }, </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">, { </span><span style="color:#CE9178;">&#39;--foobar&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;hello&#39;</span><span style="color:#D4D4D4;"> })</span></span>\n<span class="line"><span style="color:#6A9955;">//=&gt; &#39;foo --foobar&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A9955;">// Arrays</span></span>\n<span class="line"><span style="color:#DCDCAA;">clsx</span><span style="color:#D4D4D4;">([</span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bar&#39;</span><span style="color:#D4D4D4;">])</span></span>\n<span class="line"><span style="color:#6A9955;">//=&gt; &#39;foo bar&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A9955;">// Arrays (variadic)</span></span>\n<span class="line"><span style="color:#DCDCAA;">clsx</span><span style="color:#D4D4D4;">([</span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">], [</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bar&#39;</span><span style="color:#D4D4D4;">], [[</span><span style="color:#CE9178;">&#39;baz&#39;</span><span style="color:#D4D4D4;">, [[</span><span style="color:#CE9178;">&#39;hello&#39;</span><span style="color:#D4D4D4;">], </span><span style="color:#CE9178;">&#39;there&#39;</span><span style="color:#D4D4D4;">]]])</span></span>\n<span class="line"><span style="color:#6A9955;">//=&gt; &#39;foo bar baz hello there&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A9955;">// Kitchen sink (with nesting)</span></span>\n<span class="line"><span style="color:#DCDCAA;">clsx</span><span style="color:#D4D4D4;">(</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#CE9178;">&#39;bar&#39;</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">baz:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">bat:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;"> }, [</span><span style="color:#CE9178;">&#39;hello&#39;</span><span style="color:#D4D4D4;">, [</span><span style="color:#CE9178;">&#39;world&#39;</span><span style="color:#D4D4D4;">]]],</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;cya&#39;</span></span>\n<span class="line"><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#6A9955;">//=&gt; &#39;foo bar hello world cya&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A9955;">// 假值和单独的布尔值都会被过滤</span></span>\n<span class="line"><span style="color:#DCDCAA;">clsx</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">undefined</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">NaN</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#6A9955;">//=&gt; &#39;&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="clsx-源码笔记" tabindex="-1"><a class="header-anchor" href="#clsx-源码笔记" aria-hidden="true">#</a> clsx 源码笔记</h2><blockquote><p><strong>当前 clsx 源码版本为 v1.2.1</strong></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// 对参数进行类型判断并做相应处理</span></span>\n<span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">toVal</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">mix</span><span style="color:#D4D4D4;">) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">y</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 当参数 mix 为字符串和数值时直接拼接</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">typeof</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">mix</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;string&#39;</span><span style="color:#D4D4D4;"> || </span><span style="color:#569CD6;">typeof</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">mix</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;number&#39;</span><span style="color:#D4D4D4;">) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> += </span><span style="color:#9CDCFE;">mix</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 当参数 mix 为对象时</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">typeof</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">mix</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;object&#39;</span><span style="color:#D4D4D4;">) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// 当参数 mix 为数组时对其进行遍历并递归调用 toVal</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#4EC9B0;">Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isArray</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">mix</span><span style="color:#D4D4D4;">)) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">mix</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">++) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">mix</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">]) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> ((</span><span style="color:#9CDCFE;">y</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">toVal</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">mix</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">]))) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> &amp;&amp; (</span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> += </span><span style="color:#CE9178;">&#39; &#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> += </span><span style="color:#9CDCFE;">y</span></span>\n<span class="line"><span style="color:#D4D4D4;">          }</span></span>\n<span class="line"><span style="color:#D4D4D4;">        }</span></span>\n<span class="line"><span style="color:#D4D4D4;">      }</span></span>\n<span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// 遍历对象的属性，把属性值为真的属性名拼接成字符串</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">mix</span><span style="color:#D4D4D4;">) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">mix</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">]) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> &amp;&amp; (</span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> += </span><span style="color:#CE9178;">&#39; &#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> += </span><span style="color:#9CDCFE;">k</span></span>\n<span class="line"><span style="color:#D4D4D4;">        }</span></span>\n<span class="line"><span style="color:#D4D4D4;">      }</span></span>\n<span class="line"><span style="color:#D4D4D4;">    }</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">str</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A9955;">// 接收多个参数并返回一个字符串</span></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">clsx</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">tmp</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 遍历 arguments</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#569CD6;">arguments</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// 对 tmp 赋值，并判断其是否为真值</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> ((</span><span style="color:#9CDCFE;">tmp</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">arguments</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++])) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// 调用 toVal 方法对 tmp 进行处理，如果处理结果为真，则进行字符串拼接</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> ((</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">toVal</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">tmp</span><span style="color:#D4D4D4;">))) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> &amp;&amp; (</span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> += </span><span style="color:#CE9178;">&#39; &#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> += </span><span style="color:#9CDCFE;">x</span></span>\n<span class="line"><span style="color:#D4D4D4;">      }</span></span>\n<span class="line"><span style="color:#D4D4D4;">    }</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">str</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">clsx</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',6),y={},d=(0,a(3744).Z)(y,[["render",function(s,n){const a=(0,l.up)("ExternalLinkIcon");return(0,l.wg)(),(0,l.iD)("div",null,[p,(0,l._)("p",null,[(0,l._)("a",o,[e,(0,l.Wm)(a)]),D]),c,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("a",r,[t,(0,l.Wm)(a)])])]),i])}]])},3744:(s,n)=>{n.Z=(s,n)=>{const a=s.__vccOpts||s;for(const[s,l]of n)a[s]=l;return a}}}]);