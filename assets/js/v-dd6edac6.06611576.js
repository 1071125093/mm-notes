"use strict";(self.webpackChunkmm_notes=self.webpackChunkmm_notes||[]).push([[966],{6182:(s,a,n)=>{n.r(a),n.d(a,{data:()=>e});const e=JSON.parse('{"key":"v-dd6edac6","path":"/issue/h5.html","title":"H5 相关","lang":"zh-CN","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"WebView 返回上一页不刷新","slug":"webview-返回上一页不刷新","children":[]}],"git":{"updatedTime":1658923982000},"filePathRelative":"issue/h5.md"}')},2880:(s,a,n)=>{n.r(a),n.d(a,{default:()=>o});var e=n(6252);const l=[(0,e.uE)('<h1 id="h5-相关" tabindex="-1"><a class="header-anchor" href="#h5-相关" aria-hidden="true">#</a> H5 相关</h1><h2 id="webview-返回上一页不刷新" tabindex="-1"><a class="header-anchor" href="#webview-返回上一页不刷新" aria-hidden="true">#</a> WebView 返回上一页不刷新</h2><h4 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h4><p>为了提升浏览网页的效率加入了缓存机制</p><h4 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h4><p>监听 <code>pageshow</code> 事件，通过 <code>persisted</code> 或者 <code>performance.navigation.type</code> 属性判断当前页面是否通过缓存载入</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">pageshowFn</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">persisted</span><span style="color:#D4D4D4;"> ||</span></span>\n<span class="line"><span style="color:#D4D4D4;">    (</span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">performance</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">performance</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">navigation</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;"> === </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  ) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">location</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">reload</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addEventListener</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;pageshow&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">pageshowFn</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',7)],p={},o=(0,n(3744).Z)(p,[["render",function(s,a){return(0,e.wg)(),(0,e.iD)("div",null,l)}]])},3744:(s,a)=>{a.Z=(s,a)=>{const n=s.__vccOpts||s;for(const[s,e]of a)n[s]=e;return n}}}]);